

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 22 22:29:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0015                     _CCPR1L	set	21
   170     00BD                     _CCP1X	set	189
   171     00BC                     _CCP1Y	set	188
   172     0092                     _TMR2ON	set	146
   173     0091                     _T2CKPS1	set	145
   174     0090                     _T2CKPS0	set	144
   175     00BA                     _CCP1M2	set	186
   176     00BB                     _CCP1M3	set	187
   177     0034                     _RB4	set	52
   178     0033                     _RB3	set	51
   179     0032                     _RB2	set	50
   180     0031                     _RB1	set	49
   181     0041                     _RD1	set	65
   182     0040                     _RD0	set	64
   183     0030                     _RB0	set	48
   184     0092                     _PR2	set	146
   185     0086                     _TRISB	set	134
   186     043A                     _TRISC2	set	1082
   187     0441                     _TRISD1	set	1089
   188     0440                     _TRISD0	set	1088
   189                           
   190                           	psect	cinit
   191     07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07FC                     __initialization:
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_initialize_io_pins:
   205     0070                     ??_initialize_io_pins:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_initialize_pwm:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ??_initialize_pwm:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_PWM1_Set_Duty:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     PWM1_Set_Duty@duty_cycle:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 2 bytes @ 0x0
   225     0070                     	ds	2
   226     0072                     ??_PWM1_Set_Duty:
   227                           
   228                           ; 1 bytes @ 0x2
   229     0072                     	ds	2
   230     0074                     ??_main:
   231                           
   232                           ; 1 bytes @ 0x4
   233     0074                     	ds	3
   234                           
   235                           	psect	maintext
   236     076F                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 28 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0
   258 ;;      Temps:          3       0       0       0       0
   259 ;;      Totals:         3       0       0       0       0
   260 ;;Total ram usage:        3 bytes
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		_PWM1_Set_Duty
   264 ;;		_initialize_io_pins
   265 ;;		_initialize_pwm
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271     076F                     _main:	
   272                           ;psect for function _main
   273                           
   274     076F                     l727:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   277                           
   278                           
   279                           ;main.c: 29:     initialize_io_pins();
   280     076F  120A  118A  2734  120A  118A  	fcall	_initialize_io_pins
   281                           
   282                           ;main.c: 30:     initialize_pwm();
   283     0774  120A  118A  273F  120A  118A  	fcall	_initialize_pwm
   284     0779                     l729:
   285                           
   286                           ;main.c: 32:   {;main.c: 33:     if(RB0)
   287     0779  1283               	bcf	3,5	;RP0=0, select bank0
   288     077A  1303               	bcf	3,6	;RP1=0, select bank0
   289     077B  1C06               	btfss	6,0	;volatile
   290     077C  2F7E               	goto	u121
   291     077D  2F7F               	goto	u120
   292     077E                     u121:
   293     077E  2F90               	goto	l733
   294     077F                     u120:
   295     077F                     l731:
   296                           
   297                           ;main.c: 34:     {;main.c: 35:       RD0 = ~RD0;
   298     077F  3001               	movlw	1
   299     0780  0688               	xorwf	8,f
   300                           
   301                           ;main.c: 36:       RD1 = ~RD1;
   302     0781  3002               	movlw	2
   303     0782  0688               	xorwf	8,f
   304                           
   305                           ;main.c: 37:       _delay((unsigned long)((500)*(4000000/4000.0)));
   306     0783  3003               	movlw	3
   307     0784  00F6               	movwf	??_main+2
   308     0785  308A               	movlw	138
   309     0786  00F5               	movwf	??_main+1
   310     0787  3055               	movlw	85
   311     0788  00F4               	movwf	??_main
   312     0789                     u177:
   313     0789  0BF4               	decfsz	??_main,f
   314     078A  2F89               	goto	u177
   315     078B  0BF5               	decfsz	??_main+1,f
   316     078C  2F89               	goto	u177
   317     078D  0BF6               	decfsz	??_main+2,f
   318     078E  2F89               	goto	u177
   319     078F  2F90               	nop2
   320     0790                     l733:
   321                           
   322                           ;main.c: 39:     if(RB1)
   323     0790  1283               	bcf	3,5	;RP0=0, select bank0
   324     0791  1303               	bcf	3,6	;RP1=0, select bank0
   325     0792  1C86               	btfss	6,1	;volatile
   326     0793  2F95               	goto	u131
   327     0794  2F96               	goto	u130
   328     0795                     u131:
   329     0795  2FA7               	goto	l739
   330     0796                     u130:
   331     0796                     l735:
   332                           
   333                           ;main.c: 40:     {;main.c: 41:       PWM1_Set_Duty(0);
   334     0796  3000               	movlw	0
   335     0797  00F0               	movwf	PWM1_Set_Duty@duty_cycle
   336     0798  00F1               	movwf	PWM1_Set_Duty@duty_cycle+1
   337     0799  120A  118A  274E  120A  118A  	fcall	_PWM1_Set_Duty
   338     079E                     l737:
   339                           
   340                           ;main.c: 42:       _delay((unsigned long)((100)*(4000000/4000.0)));
   341     079E  3082               	movlw	130
   342     079F  00F5               	movwf	??_main+1
   343     07A0  30DD               	movlw	221
   344     07A1  00F4               	movwf	??_main
   345     07A2                     u187:
   346     07A2  0BF4               	decfsz	??_main,f
   347     07A3  2FA2               	goto	u187
   348     07A4  0BF5               	decfsz	??_main+1,f
   349     07A5  2FA2               	goto	u187
   350     07A6  2FA7               	nop2
   351     07A7                     l739:
   352                           
   353                           ;main.c: 44:     if(RB2)
   354     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   355     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   356     07A9  1D06               	btfss	6,2	;volatile
   357     07AA  2FAC               	goto	u141
   358     07AB  2FAD               	goto	u140
   359     07AC                     u141:
   360     07AC  2FBF               	goto	l745
   361     07AD                     u140:
   362     07AD                     l741:
   363                           
   364                           ;main.c: 45:     {;main.c: 46:       PWM1_Set_Duty(250);
   365     07AD  30FA               	movlw	250
   366     07AE  00F0               	movwf	PWM1_Set_Duty@duty_cycle
   367     07AF  3000               	movlw	0
   368     07B0  00F1               	movwf	PWM1_Set_Duty@duty_cycle+1
   369     07B1  120A  118A  274E  120A  118A  	fcall	_PWM1_Set_Duty
   370     07B6                     l743:
   371                           
   372                           ;main.c: 47:       _delay((unsigned long)((100)*(4000000/4000.0)));
   373     07B6  3082               	movlw	130
   374     07B7  00F5               	movwf	??_main+1
   375     07B8  30DD               	movlw	221
   376     07B9  00F4               	movwf	??_main
   377     07BA                     u197:
   378     07BA  0BF4               	decfsz	??_main,f
   379     07BB  2FBA               	goto	u197
   380     07BC  0BF5               	decfsz	??_main+1,f
   381     07BD  2FBA               	goto	u197
   382     07BE  2FBF               	nop2
   383     07BF                     l745:
   384                           
   385                           ;main.c: 49:     if(RB3)
   386     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   387     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   388     07C1  1D86               	btfss	6,3	;volatile
   389     07C2  2FC4               	goto	u151
   390     07C3  2FC5               	goto	u150
   391     07C4                     u151:
   392     07C4  2FD7               	goto	l751
   393     07C5                     u150:
   394     07C5                     l747:
   395                           
   396                           ;main.c: 50:     {;main.c: 51:       PWM1_Set_Duty(375);
   397     07C5  3077               	movlw	119
   398     07C6  00F0               	movwf	PWM1_Set_Duty@duty_cycle
   399     07C7  3001               	movlw	1
   400     07C8  00F1               	movwf	PWM1_Set_Duty@duty_cycle+1
   401     07C9  120A  118A  274E  120A  118A  	fcall	_PWM1_Set_Duty
   402     07CE                     l749:
   403                           
   404                           ;main.c: 52:       _delay((unsigned long)((100)*(4000000/4000.0)));
   405     07CE  3082               	movlw	130
   406     07CF  00F5               	movwf	??_main+1
   407     07D0  30DD               	movlw	221
   408     07D1  00F4               	movwf	??_main
   409     07D2                     u207:
   410     07D2  0BF4               	decfsz	??_main,f
   411     07D3  2FD2               	goto	u207
   412     07D4  0BF5               	decfsz	??_main+1,f
   413     07D5  2FD2               	goto	u207
   414     07D6  2FD7               	nop2
   415     07D7                     l751:
   416                           
   417                           ;main.c: 54:     if (RB4)
   418     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   419     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   420     07D9  1E06               	btfss	6,4	;volatile
   421     07DA  2FDC               	goto	u161
   422     07DB  2FDD               	goto	u160
   423     07DC                     u161:
   424     07DC  2FEF               	goto	l757
   425     07DD                     u160:
   426     07DD                     l753:
   427                           
   428                           ;main.c: 55:     {;main.c: 56:       PWM1_Set_Duty(500);
   429     07DD  30F4               	movlw	244
   430     07DE  00F0               	movwf	PWM1_Set_Duty@duty_cycle
   431     07DF  3001               	movlw	1
   432     07E0  00F1               	movwf	PWM1_Set_Duty@duty_cycle+1
   433     07E1  120A  118A  274E  120A  118A  	fcall	_PWM1_Set_Duty
   434     07E6                     l755:
   435                           
   436                           ;main.c: 57:       _delay((unsigned long)((100)*(4000000/4000.0)));
   437     07E6  3082               	movlw	130
   438     07E7  00F5               	movwf	??_main+1
   439     07E8  30DD               	movlw	221
   440     07E9  00F4               	movwf	??_main
   441     07EA                     u217:
   442     07EA  0BF4               	decfsz	??_main,f
   443     07EB  2FEA               	goto	u217
   444     07EC  0BF5               	decfsz	??_main+1,f
   445     07ED  2FEA               	goto	u217
   446     07EE  2FEF               	nop2
   447     07EF                     l757:
   448                           
   449                           ;main.c: 59:     _delay((unsigned long)((10)*(4000000/4000.0)));
   450     07EF  300D               	movlw	13
   451     07F0  00F5               	movwf	??_main+1
   452     07F1  30FB               	movlw	251
   453     07F2  00F4               	movwf	??_main
   454     07F3                     u227:
   455     07F3  0BF4               	decfsz	??_main,f
   456     07F4  2FF3               	goto	u227
   457     07F5  0BF5               	decfsz	??_main+1,f
   458     07F6  2FF3               	goto	u227
   459     07F7  2FF8               	nop2
   460     07F8  2F79               	goto	l729
   461     07F9  120A  118A  2800   	ljmp	start
   462     07FC                     __end_of_main:
   463                           
   464                           	psect	text1
   465     073F                     __ptext1:	
   466 ;; *************** function _initialize_pwm *****************
   467 ;; Defined at:
   468 ;;		line 78 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495     073F                     _initialize_pwm:	
   496                           ;psect for function _initialize_pwm
   497                           
   498     073F                     l673:	
   499                           ;incstack = 0
   500                           ; Regs used in _initialize_pwm: [wreg]
   501                           
   502                           
   503                           ;main.c: 81:   CCP1M3 = 1;
   504     073F  1283               	bcf	3,5	;RP0=0, select bank0
   505     0740  1303               	bcf	3,6	;RP1=0, select bank0
   506     0741  1597               	bsf	23,3	;volatile
   507                           
   508                           ;main.c: 82:   CCP1M2 = 1;
   509     0742  1517               	bsf	23,2	;volatile
   510                           
   511                           ;main.c: 85:   TRISC2 = 0;
   512     0743  1683               	bsf	3,5	;RP0=1, select bank1
   513     0744  1303               	bcf	3,6	;RP1=0, select bank1
   514     0745  1107               	bcf	7,2	;volatile
   515     0746                     l675:
   516                           
   517                           ;main.c: 88:   PR2 = 124;
   518     0746  307C               	movlw	124
   519     0747  0092               	movwf	18	;volatile
   520     0748                     l677:
   521                           
   522                           ;main.c: 91:   T2CKPS0 = 1;
   523     0748  1283               	bcf	3,5	;RP0=0, select bank0
   524     0749  1303               	bcf	3,6	;RP1=0, select bank0
   525     074A  1412               	bsf	18,0	;volatile
   526     074B                     l679:
   527                           
   528                           ;main.c: 92:   T2CKPS1 = 0;
   529     074B  1092               	bcf	18,1	;volatile
   530     074C                     l681:
   531                           
   532                           ;main.c: 95:   TMR2ON = 1;
   533     074C  1512               	bsf	18,2	;volatile
   534     074D                     l67:
   535     074D  0008               	return
   536     074E                     __end_of_initialize_pwm:
   537                           
   538                           	psect	text2
   539     0734                     __ptext2:	
   540 ;; *************** function _initialize_io_pins *****************
   541 ;; Defined at:
   542 ;;		line 64 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     0734                     _initialize_io_pins:	
   570                           ;psect for function _initialize_io_pins
   571                           
   572     0734                     l663:	
   573                           ;incstack = 0
   574                           ; Regs used in _initialize_io_pins: [wreg]
   575                           
   576                           
   577                           ;main.c: 67:   TRISB = 0x1F;
   578     0734  301F               	movlw	31
   579     0735  1683               	bsf	3,5	;RP0=1, select bank1
   580     0736  1303               	bcf	3,6	;RP1=0, select bank1
   581     0737  0086               	movwf	6	;volatile
   582     0738                     l665:
   583                           
   584                           ;main.c: 70:   TRISD0 = 0;
   585     0738  1008               	bcf	8,0	;volatile
   586     0739                     l667:
   587                           
   588                           ;main.c: 71:   TRISD1 = 0;
   589     0739  1088               	bcf	8,1	;volatile
   590     073A                     l669:
   591                           
   592                           ;main.c: 74:   RD0 = 0;
   593     073A  1283               	bcf	3,5	;RP0=0, select bank0
   594     073B  1303               	bcf	3,6	;RP1=0, select bank0
   595     073C  1008               	bcf	8,0	;volatile
   596     073D                     l671:
   597                           
   598                           ;main.c: 75:   RD1 = 1;
   599     073D  1488               	bsf	8,1	;volatile
   600     073E                     l64:
   601     073E  0008               	return
   602     073F                     __end_of_initialize_io_pins:
   603                           
   604                           	psect	text3
   605     074E                     __ptext3:	
   606 ;; *************** function _PWM1_Set_Duty *****************
   607 ;; Defined at:
   608 ;;		line 98 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  duty_cycle      2    0[COMMON] unsigned int 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         2       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0
   625 ;;      Totals:         4       0       0       0       0
   626 ;;Total ram usage:        4 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     074E                     _PWM1_Set_Duty:	
   636                           ;psect for function _PWM1_Set_Duty
   637                           
   638     074E                     l721:	
   639                           ;incstack = 0
   640                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   641                           
   642                           
   643                           ;main.c: 98: void PWM1_Set_Duty(uint16_t duty_cycle);main.c: 99: {;main.c: 101:   if(dut
      +                          y_cycle <1024)
   644     074E  3004               	movlw	4
   645     074F  0271               	subwf	PWM1_Set_Duty@duty_cycle+1,w
   646     0750  3000               	movlw	0
   647     0751  1903               	skipnz
   648     0752  0270               	subwf	PWM1_Set_Duty@duty_cycle,w
   649     0753  1803               	skipnc
   650     0754  2F56               	goto	u91
   651     0755  2F57               	goto	u90
   652     0756                     u91:
   653     0756  2F6E               	goto	l71
   654     0757                     u90:
   655     0757                     l723:
   656                           
   657                           ;main.c: 102:   {;main.c: 103:     CCP1Y = duty_cycle & 1;
   658     0757  1870               	btfsc	PWM1_Set_Duty@duty_cycle,0
   659     0758  2F5A               	goto	u101
   660     0759  2F5E               	goto	u100
   661     075A                     u101:
   662     075A  1283               	bcf	3,5	;RP0=0, select bank0
   663     075B  1303               	bcf	3,6	;RP1=0, select bank0
   664     075C  1617               	bsf	23,4	;volatile
   665     075D  2F61               	goto	u114
   666     075E                     u100:
   667     075E  1283               	bcf	3,5	;RP0=0, select bank0
   668     075F  1303               	bcf	3,6	;RP1=0, select bank0
   669     0760  1217               	bcf	23,4	;volatile
   670     0761                     u114:
   671                           
   672                           ;main.c: 104:     CCP1X = duty_cycle & 2;
   673     0761  1297               	bcf	23,5	;volatile
   674     0762                     l725:
   675                           
   676                           ;main.c: 105:     CCPR1L = duty_cycle >> 2;
   677     0762  0871               	movf	PWM1_Set_Duty@duty_cycle+1,w
   678     0763  00F3               	movwf	??_PWM1_Set_Duty+1
   679     0764  0870               	movf	PWM1_Set_Duty@duty_cycle,w
   680     0765  00F2               	movwf	??_PWM1_Set_Duty
   681     0766  1003               	clrc
   682     0767  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   683     0768  0CF2               	rrf	??_PWM1_Set_Duty,f
   684     0769  1003               	clrc
   685     076A  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   686     076B  0CF2               	rrf	??_PWM1_Set_Duty,f
   687     076C  0872               	movf	??_PWM1_Set_Duty,w
   688     076D  0095               	movwf	21	;volatile
   689     076E                     l71:
   690     076E  0008               	return
   691     076F                     __end_of_PWM1_Set_Duty:
   692     007E                     btemp	set	126	;btemp
   693     007E                     wtemp0	set	126
   694                           
   695                           	psect	idloc
   696                           
   697                           ;Config register IDLOC0 @ 0x2000
   698                           ;	unspecified, using default values
   699     2000                     	org	8192
   700     2000  3FFF               	dw	16383
   701                           
   702                           ;Config register IDLOC1 @ 0x2001
   703                           ;	unspecified, using default values
   704     2001                     	org	8193
   705     2001  3FFF               	dw	16383
   706                           
   707                           ;Config register IDLOC2 @ 0x2002
   708                           ;	unspecified, using default values
   709     2002                     	org	8194
   710     2002  3FFF               	dw	16383
   711                           
   712                           ;Config register IDLOC3 @ 0x2003
   713                           ;	unspecified, using default values
   714     2003                     	org	8195
   715     2003  3FFF               	dw	16383
   716                           
   717                           	psect	config
   718                           
   719                           ;Config register CONFIG @ 0x2007
   720                           ;	Oscillator Selection bits
   721                           ;	FOSC = XT, XT oscillator
   722                           ;	Watchdog Timer Enable bit
   723                           ;	WDTE = OFF, WDT disabled
   724                           ;	Power-up Timer Enable bit
   725                           ;	PWRTE = ON, PWRT enabled
   726                           ;	Brown-out Reset Enable bit
   727                           ;	BOREN = ON, BOR enabled
   728                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   729                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   730                           ;	Data EEPROM Memory Code Protection bit
   731                           ;	CPD = OFF, Data EEPROM code protection off
   732                           ;	Flash Program Memory Write Enable bits
   733                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   734                           ;	In-Circuit Debugger Mode bit
   735                           ;	DEBUG = 0x1, unprogrammed default
   736                           ;	Flash Program Memory Code Protection bit
   737                           ;	CP = OFF, Code protection off
   738     2007                     	org	8199
   739     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     370
                                              4 COMMON     3     3      0
                      _PWM1_Set_Duty
                 _initialize_io_pins
                     _initialize_pwm
 ---------------------------------------------------------------------------------
 (1) _initialize_pwm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_io_pins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     370
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty
   _initialize_io_pins
   _initialize_pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 22 22:29:56 2023

                        l71 076E                          l64 073E                          l67 074D  
                        u90 0757                          u91 0756                         l721 074E  
                       l723 0757                         l731 077F                         l725 0762  
                       l741 07AD                         l733 0790                         l671 073D  
                       l663 0734                         l751 07D7                         l743 07B6  
                       l735 0796                         l727 076F                         l665 0738  
                       l681 074C                         l673 073F                         l753 07DD  
                       l745 07BF                         l737 079E                         l729 0779  
                       l667 0739                         l675 0746                         l755 07E6  
                       l747 07C5                         l739 07A7                         l669 073A  
                       l677 0748                         l757 07EF                         l749 07CE  
                       l679 074B                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RB3 0033                         _RD0 0040  
                       _RB4 0034                         _RD1 0041                         u100 075E  
                       u101 075A                         u120 077F                         u121 077E  
                       u114 0761                         u130 0796                         u131 0795  
                       u140 07AD                         u141 07AC                         u150 07C5  
                       u207 07D2                         u151 07C4                         u160 07DD  
                       u217 07EA                         u161 07DC                         u227 07F3  
                       _PR2 0092                         u177 0789                         u187 07A2  
                       u197 07BA            ??_initialize_pwm 0070                        _main 076F  
                      btemp 007E                        start 0000                       ?_main 0070  
                     _CCP1X 00BD                       _CCP1Y 00BC                       _TRISB 0086  
                     status 0003                       wtemp0 007E             __initialization 07FC  
              __end_of_main 07FC                      ??_main 0074                      _CCP1M2 00BA  
                    _CCP1M3 00BB                      _CCPR1L 0015                      _TMR2ON 0092  
                    _TRISD0 0440                      _TRISC2 043A                      _TRISD1 0441  
   __end_of__initialization 07FC              __pcstackCOMMON 0070       __end_of_PWM1_Set_Duty 076F  
                __pmaintext 076F                     _T2CKPS0 0090                     _T2CKPS1 0091  
                   __ptext1 073F                     __ptext2 0734                     __ptext3 074E  
      end_of_initialization 07FC  __end_of_initialize_io_pins 073F         start_initialization 07FC  
                 ___latbits 0002              _initialize_pwm 073F     PWM1_Set_Duty@duty_cycle 0070  
    __end_of_initialize_pwm 074E               _PWM1_Set_Duty 074E          _initialize_io_pins 0734  
       ?_initialize_io_pins 0070             ?_initialize_pwm 0070        ??_initialize_io_pins 0070  
            ?_PWM1_Set_Duty 0070             ??_PWM1_Set_Duty 0072  
