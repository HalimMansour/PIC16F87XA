

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Mar 18 16:50:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     000E                     _TMR1	set	14
   170     0060                     _TMR1IF	set	96
   171     0080                     _TMR1ON	set	128
   172     0085                     _T1CKPS1	set	133
   173     0084                     _T1CKPS0	set	132
   174     0081                     _TMR1CS	set	129
   175     005F                     _GIE	set	95
   176     005E                     _PEIE	set	94
   177     0030                     _RB0	set	48
   178     0460                     _TMR1IE	set	1120
   179     0430                     _TRISB0	set	1072
   180                           
   181                           	psect	cinit
   182     0011                     start_initialization:	
   183                           ; #config settings
   184                           
   185     0011                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   189     0012                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     0012                     __end_of__initialization:
   193     0012  0183               	clrf	3
   194     0013  120A  118A  2837   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197     0073                     __pbssCOMMON:
   198     0073                     _counter:
   199     0073                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_main:
   204     0070                     ?_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212     0070                     	ds	3
   213     0073                     ??_main:
   214                           
   215                           	psect	maintext
   216     0037                     __pmaintext:	
   217                           ; 1 bytes @ 0x3
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 15 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		None
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     0037                     _main:	
   251                           ;psect for function _main
   252                           
   253     0037                     l631:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: []
   256                           
   257                           
   258                           ;main.c: 18:     TRISB0 = 0;
   259     0037  1683               	bsf	3,5	;RP0=1, select bank1
   260     0038  1303               	bcf	3,6	;RP1=0, select bank1
   261     0039  1006               	bcf	6,0	;volatile
   262                           
   263                           ;main.c: 20:     RB0 = 0;
   264     003A  1283               	bcf	3,5	;RP0=0, select bank0
   265     003B  1303               	bcf	3,6	;RP1=0, select bank0
   266     003C  1006               	bcf	6,0	;volatile
   267                           
   268                           ;main.c: 22:     TMR1IE = 1;
   269     003D  1683               	bsf	3,5	;RP0=1, select bank1
   270     003E  1303               	bcf	3,6	;RP1=0, select bank1
   271     003F  140C               	bsf	12,0	;volatile
   272                           
   273                           ;main.c: 23:     PEIE = 1;
   274     0040  170B               	bsf	11,6	;volatile
   275                           
   276                           ;main.c: 24:     GIE = 1;
   277     0041  178B               	bsf	11,7	;volatile
   278                           
   279                           ;main.c: 27:     TMR1= 15536;
   280     0042  303C               	movlw	60
   281     0043  1283               	bcf	3,5	;RP0=0, select bank0
   282     0044  1303               	bcf	3,6	;RP1=0, select bank0
   283     0045  008F               	movwf	15	;volatile
   284     0046  30B0               	movlw	176
   285     0047  008E               	movwf	14	;volatile
   286                           
   287                           ;main.c: 30:     TMR1CS = 0;
   288     0048  1090               	bcf	16,1	;volatile
   289                           
   290                           ;main.c: 33:     T1CKPS0 = 0;
   291     0049  1210               	bcf	16,4	;volatile
   292                           
   293                           ;main.c: 34:     T1CKPS1 = 0;
   294     004A  1290               	bcf	16,5	;volatile
   295                           
   296                           ;main.c: 37:     TMR1ON=1;
   297     004B  1410               	bsf	16,0	;volatile
   298     004C                     l29:	
   299                           ;main.c: 39:     while(1)
   300                           
   301     004C                     l30:	
   302                           ;main.c: 40:     {;main.c: 42:     }
   303                           
   304     004C  284C               	goto	l29
   305     004D  120A  118A  280E   	ljmp	start
   306     0050                     __end_of_main:
   307                           
   308                           	psect	text1
   309     0016                     __ptext1:	
   310 ;; *************** function _ISR *****************
   311 ;; Defined at:
   312 ;;		line 49 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, btemp+1
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0
   328 ;;      Temps:          3       0       0       0       0
   329 ;;      Totals:         3       0       0       0       0
   330 ;;Total ram usage:        3 bytes
   331 ;; Hardware stack levels used: 1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		Interrupt level 1
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     0016                     _ISR:	
   340                           ;psect for function _ISR
   341                           
   342     0016                     i1l633:
   343                           
   344                           ;main.c: 51:     if(TMR1IF)
   345     0016  1283               	bcf	3,5	;RP0=0, select bank0
   346     0017  1303               	bcf	3,6	;RP1=0, select bank0
   347     0018  1C0C               	btfss	12,0	;volatile
   348     0019  281B               	goto	u1_21
   349     001A  281C               	goto	u1_20
   350     001B                     u1_21:
   351     001B  282E               	goto	i1l39
   352     001C                     u1_20:
   353     001C                     i1l635:
   354                           
   355                           ;main.c: 52:     {;main.c: 53:         TMR1= 15536;
   356     001C  303C               	movlw	60
   357     001D  008F               	movwf	15	;volatile
   358     001E  30B0               	movlw	176
   359     001F  008E               	movwf	14	;volatile
   360     0020                     i1l637:
   361                           
   362                           ;main.c: 54:         counter++;
   363     0020  3001               	movlw	1
   364     0021  00FF               	movwf	btemp+1
   365     0022  087F               	movf	btemp+1,w
   366     0023  07F3               	addwf	_counter,f
   367     0024                     i1l639:
   368                           
   369                           ;main.c: 55:         if(counter==20)
   370     0024  3014               	movlw	20
   371     0025  0673               	xorwf	_counter,w
   372     0026  1D03               	btfss	3,2
   373     0027  2829               	goto	u2_21
   374     0028  282A               	goto	u2_20
   375     0029                     u2_21:
   376     0029  282D               	goto	i1l645
   377     002A                     u2_20:
   378     002A                     i1l641:
   379                           
   380                           ;main.c: 56:         {;main.c: 57:             RB0= ~RB0;
   381     002A  3001               	movlw	1
   382     002B  0686               	xorwf	6,f
   383     002C                     i1l643:
   384                           
   385                           ;main.c: 58:             counter=0;
   386     002C  01F3               	clrf	_counter
   387     002D                     i1l645:
   388                           
   389                           ;main.c: 60:         TMR1IF = 0;
   390     002D  100C               	bcf	12,0	;volatile
   391     002E                     i1l39:
   392     002E  0872               	movf	??_ISR+2,w
   393     002F  00FF               	movwf	btemp+1
   394     0030  0871               	movf	??_ISR+1,w
   395     0031  008A               	movwf	10
   396     0032  0E70               	swapf	??_ISR,w
   397     0033  0083               	movwf	3
   398     0034  0EFE               	swapf	btemp,f
   399     0035  0E7E               	swapf	btemp,w
   400     0036  0009               	retfie
   401     0037                     __end_of_ISR:
   402     007E                     btemp	set	126	;btemp
   403     007E                     wtemp0	set	126
   404                           
   405                           	psect	intentry
   406     0004                     __pintentry:	
   407                           ;incstack = 0
   408                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   409                           
   410     0004                     interrupt_function:
   411     007E                     saved_w	set	btemp
   412     0004  00FE               	movwf	btemp
   413     0005  0E03               	swapf	3,w
   414     0006  00F0               	movwf	??_ISR
   415     0007  080A               	movf	10,w
   416     0008  00F1               	movwf	??_ISR+1
   417     0009  087F               	movf	btemp+1,w
   418     000A  00F2               	movwf	??_ISR+2
   419     000B  120A  118A  2816   	ljmp	_ISR
   420                           
   421                           	psect	idloc
   422                           
   423                           ;Config register IDLOC0 @ 0x2000
   424                           ;	unspecified, using default values
   425     2000                     	org	8192
   426     2000  3FFF               	dw	16383
   427                           
   428                           ;Config register IDLOC1 @ 0x2001
   429                           ;	unspecified, using default values
   430     2001                     	org	8193
   431     2001  3FFF               	dw	16383
   432                           
   433                           ;Config register IDLOC2 @ 0x2002
   434                           ;	unspecified, using default values
   435     2002                     	org	8194
   436     2002  3FFF               	dw	16383
   437                           
   438                           ;Config register IDLOC3 @ 0x2003
   439                           ;	unspecified, using default values
   440     2003                     	org	8195
   441     2003  3FFF               	dw	16383
   442                           
   443                           	psect	config
   444                           
   445                           ;Config register CONFIG @ 0x2007
   446                           ;	Oscillator Selection bits
   447                           ;	FOSC = XT, XT oscillator
   448                           ;	Watchdog Timer Enable bit
   449                           ;	WDTE = OFF, WDT disabled
   450                           ;	Power-up Timer Enable bit
   451                           ;	PWRTE = ON, PWRT enabled
   452                           ;	Brown-out Reset Enable bit
   453                           ;	BOREN = ON, BOR enabled
   454                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   455                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   456                           ;	Data EEPROM Memory Code Protection bit
   457                           ;	CPD = OFF, Data EEPROM code protection off
   458                           ;	Flash Program Memory Write Enable bits
   459                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   460                           ;	In-Circuit Debugger Mode bit
   461                           ;	DEBUG = 0x1, unprogrammed default
   462                           ;	Flash Program Memory Code Protection bit
   463                           ;	CP = OFF, Code protection off
   464     2007                     	org	8199
   465     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Mar 18 16:50:37 2023

                     l30 004C                       l29 004C                      l631 0037  
                    _GIE 005F                      _RB0 0030                      _ISR 0016  
                   ?_ISR 0070                     _PEIE 005E                     i1l39 002E  
                   _TMR1 000E                     u1_20 001C                     u1_21 001B  
                   u2_20 002A                     u2_21 0029                     _main 0037  
                   btemp 007E                     start 000E                    ??_ISR 0070  
                  ?_main 0070                    i1l641 002A                    i1l633 0016  
                  i1l643 002C                    i1l635 001C                    i1l645 002D  
                  i1l637 0020                    i1l639 0024                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0050                   ??_main 0073                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
                 _TRISB0 0430                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0037               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  __ptext1 0016  
                _counter 0073     end_of_initialization 0012      start_initialization 0011  
            __end_of_ISR 0037              __pbssCOMMON 0073                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
