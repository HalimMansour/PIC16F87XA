

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Mar 20 00:17:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0059                     _INTF	set	89
   169     003A                     _RC2	set	58
   170     0039                     _RC1	set	57
   171     005F                     _GIE	set	95
   172     005C                     _INTE	set	92
   173     043A                     _TRISC2	set	1082
   174     0439                     _TRISC1	set	1081
   175     040E                     _INTEDG	set	1038
   176     0430                     _TRISB0	set	1072
   177                           
   178                           	psect	cinit
   179     000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182     000F                     __initialization:
   183     000F                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     000F                     __end_of__initialization:
   187     000F  0183               	clrf	3
   188     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_main:
   193     0070                     ?_ISR:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ??_ISR:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201     0070                     	ds	2
   202     0072                     ??_main:
   203                           
   204                           ; 1 bytes @ 0x2
   205     0072                     	ds	2
   206                           
   207                           	psect	maintext
   208     0013                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 14 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0
   230 ;;      Temps:          2       0       0       0       0
   231 ;;      Totals:         2       0       0       0       0
   232 ;;Total ram usage:        2 bytes
   233 ;; Hardware stack levels required when called: 1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241     0013                     _main:	
   242                           ;psect for function _main
   243                           
   244     0013                     l626:	
   245                           ;incstack = 0
   246                           ; Regs used in _main: [wreg]
   247                           
   248                           
   249                           ;main.c: 16:     TRISB0 = 1;
   250     0013  1683               	bsf	3,5	;RP0=1, select bank1
   251     0014  1303               	bcf	3,6	;RP1=0, select bank1
   252     0015  1406               	bsf	6,0	;volatile
   253                           
   254                           ;main.c: 18:     INTEDG = 1;
   255     0016  1701               	bsf	1,6	;volatile
   256                           
   257                           ;main.c: 20:     INTE = 1;
   258     0017  160B               	bsf	11,4	;volatile
   259                           
   260                           ;main.c: 21:     GIE = 1;
   261     0018  178B               	bsf	11,7	;volatile
   262                           
   263                           ;main.c: 24:     TRISC1=0;
   264     0019  1087               	bcf	7,1	;volatile
   265                           
   266                           ;main.c: 25:     TRISC2=0;
   267     001A  1107               	bcf	7,2	;volatile
   268                           
   269                           ;main.c: 28:     RC1=0;
   270     001B  1283               	bcf	3,5	;RP0=0, select bank0
   271     001C  1303               	bcf	3,6	;RP1=0, select bank0
   272     001D  1087               	bcf	7,1	;volatile
   273                           
   274                           ;main.c: 29:     RC2=0;
   275     001E  1107               	bcf	7,2	;volatile
   276     001F                     l628:
   277                           
   278                           ;main.c: 32:     {;main.c: 33:         RC2 = ~RC2;
   279     001F  3004               	movlw	4
   280     0020  1283               	bcf	3,5	;RP0=0, select bank0
   281     0021  1303               	bcf	3,6	;RP1=0, select bank0
   282     0022  0687               	xorwf	7,f
   283                           
   284                           ;main.c: 34:         _delay((unsigned long)((10000)*(40000000/4000000.0)));
   285     0023  3082               	movlw	130
   286     0024  00F3               	movwf	??_main+1
   287     0025  30DD               	movlw	221
   288     0026  00F2               	movwf	??_main
   289     0027                     u27:
   290     0027  0BF2               	decfsz	??_main,f
   291     0028  2827               	goto	u27
   292     0029  0BF3               	decfsz	??_main+1,f
   293     002A  2827               	goto	u27
   294     002B  282C               	nop2
   295     002C  281F               	goto	l628
   296     002D  120A  118A  280C   	ljmp	start
   297     0030                     __end_of_main:
   298                           
   299                           	psect	text1
   300     0030                     __ptext1:	
   301 ;; *************** function _ISR *****************
   302 ;; Defined at:
   303 ;;		line 43 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   317 ;;      Params:         0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0
   319 ;;      Temps:          2       0       0       0       0
   320 ;;      Totals:         2       0       0       0       0
   321 ;;Total ram usage:        2 bytes
   322 ;; Hardware stack levels used: 1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		Interrupt level 1
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330     0030                     _ISR:	
   331                           ;psect for function _ISR
   332                           
   333     0030                     i1l630:
   334                           
   335                           ;main.c: 45:     if(INTF)
   336     0030  1C8B               	btfss	11,1	;volatile
   337     0031  2833               	goto	u1_21
   338     0032  2834               	goto	u1_20
   339     0033                     u1_21:
   340     0033  2839               	goto	i1l34
   341     0034                     u1_20:
   342     0034                     i1l632:
   343                           
   344                           ;main.c: 46:     {;main.c: 47:         RC1=~RC1;
   345     0034  3002               	movlw	2
   346     0035  1283               	bcf	3,5	;RP0=0, select bank0
   347     0036  1303               	bcf	3,6	;RP1=0, select bank0
   348     0037  0687               	xorwf	7,f
   349     0038                     i1l634:
   350                           
   351                           ;main.c: 48:         INTF = 0;
   352     0038  108B               	bcf	11,1	;volatile
   353     0039                     i1l34:
   354     0039  0871               	movf	??_ISR+1,w
   355     003A  008A               	movwf	10
   356     003B  0E70               	swapf	??_ISR,w
   357     003C  0083               	movwf	3
   358     003D  0EFE               	swapf	btemp,f
   359     003E  0E7E               	swapf	btemp,w
   360     003F  0009               	retfie
   361     0040                     __end_of_ISR:
   362     007E                     btemp	set	126	;btemp
   363     007E                     wtemp0	set	126
   364                           
   365                           	psect	intentry
   366     0004                     __pintentry:	
   367                           ;incstack = 0
   368                           ; Regs used in _ISR: [wreg]
   369                           
   370     0004                     interrupt_function:
   371     007E                     saved_w	set	btemp
   372     0004  00FE               	movwf	btemp
   373     0005  0E03               	swapf	3,w
   374     0006  00F0               	movwf	??_ISR
   375     0007  080A               	movf	10,w
   376     0008  00F1               	movwf	??_ISR+1
   377     0009  120A  118A  2830   	ljmp	_ISR
   378                           
   379                           	psect	idloc
   380                           
   381                           ;Config register IDLOC0 @ 0x2000
   382                           ;	unspecified, using default values
   383     2000                     	org	8192
   384     2000  3FFF               	dw	16383
   385                           
   386                           ;Config register IDLOC1 @ 0x2001
   387                           ;	unspecified, using default values
   388     2001                     	org	8193
   389     2001  3FFF               	dw	16383
   390                           
   391                           ;Config register IDLOC2 @ 0x2002
   392                           ;	unspecified, using default values
   393     2002                     	org	8194
   394     2002  3FFF               	dw	16383
   395                           
   396                           ;Config register IDLOC3 @ 0x2003
   397                           ;	unspecified, using default values
   398     2003                     	org	8195
   399     2003  3FFF               	dw	16383
   400                           
   401                           	psect	config
   402                           
   403                           ;Config register CONFIG @ 0x2007
   404                           ;	Oscillator Selection bits
   405                           ;	FOSC = XT, XT oscillator
   406                           ;	Watchdog Timer Enable bit
   407                           ;	WDTE = OFF, WDT disabled
   408                           ;	Power-up Timer Enable bit
   409                           ;	PWRTE = ON, PWRT enabled
   410                           ;	Brown-out Reset Enable bit
   411                           ;	BOREN = ON, BOR enabled
   412                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   413                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   414                           ;	Data EEPROM Memory Code Protection bit
   415                           ;	CPD = OFF, Data EEPROM code protection off
   416                           ;	Flash Program Memory Write Enable bits
   417                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   418                           ;	In-Circuit Debugger Mode bit
   419                           ;	DEBUG = 0x1, unprogrammed default
   420                           ;	Flash Program Memory Code Protection bit
   421                           ;	CP = OFF, Code protection off
   422     2007                     	org	8199
   423     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Mar 20 00:17:44 2023

                     u27 0027                      l626 0013                      l628 001F  
                    _GIE 005F                      _RC1 0039                      _RC2 003A  
                    _ISR 0030                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l34 0039                     u1_20 0034  
                   u1_21 0033                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l630 0030                    i1l632 0034                    i1l634 0038  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0030                   ??_main 0072  
                 _INTEDG 040E                   _TRISB0 0430                   _TRISC1 0439  
                 _TRISC2 043A                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 0013               __pintentry 0004  
                __ptext1 0030     end_of_initialization 000F      start_initialization 000F  
            __end_of_ISR 0040                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
