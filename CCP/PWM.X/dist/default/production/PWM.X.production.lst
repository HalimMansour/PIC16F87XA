

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Mar 21 22:38:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0015                     _CCPR1L	set	21
   168     00BD                     _CCP1X	set	189
   169     00BC                     _CCP1Y	set	188
   170     0092                     _TMR2ON	set	146
   171     0091                     _T2CKPS1	set	145
   172     0090                     _T2CKPS0	set	144
   173     00BA                     _CCP1M2	set	186
   174     00BB                     _CCP1M3	set	187
   175     0092                     _PR2	set	146
   176     043A                     _TRISC2	set	1082
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_PWM1_Set_Duty:
   193     0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     PWM1_Set_Duty@DC:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 2 bytes @ 0x0
   201     0070                     	ds	2
   202     0072                     ??_PWM1_Set_Duty:
   203                           
   204                           ; 1 bytes @ 0x2
   205     0072                     	ds	2
   206     0074                     ??_main:
   207                           
   208                           ; 1 bytes @ 0x4
   209     0074                     	ds	2
   210     0076                     main@DC:
   211                           
   212                           ; 2 bytes @ 0x6
   213     0076                     	ds	2
   214                           
   215                           	psect	maintext
   216     0795                     __pmaintext:	
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 17 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  DC              2    6[COMMON] unsigned int 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, pclath, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         2       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0
   239 ;;      Totals:         4       0       0       0       0
   240 ;;Total ram usage:        4 bytes
   241 ;; Hardware stack levels required when called: 1
   242 ;; This function calls:
   243 ;;		_PWM1_Set_Duty
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249     0795                     _main:	
   250                           ;psect for function _main
   251                           
   252     0795                     l680:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   255                           
   256                           
   257                           ;main.c: 20:     CCP1M3 = 1;
   258     0795  1283               	bcf	3,5	;RP0=0, select bank0
   259     0796  1303               	bcf	3,6	;RP1=0, select bank0
   260     0797  1597               	bsf	23,3	;volatile
   261                           
   262                           ;main.c: 21:     CCP1M2 = 1;
   263     0798  1517               	bsf	23,2	;volatile
   264                           
   265                           ;main.c: 22:     TRISC2 = 0;
   266     0799  1683               	bsf	3,5	;RP0=1, select bank1
   267     079A  1303               	bcf	3,6	;RP1=0, select bank1
   268     079B  1107               	bcf	7,2	;volatile
   269     079C                     l682:
   270                           
   271                           ;main.c: 25:     PR2 = 124;
   272     079C  307C               	movlw	124
   273     079D  0092               	movwf	18	;volatile
   274     079E                     l684:
   275                           
   276                           ;main.c: 28:     T2CKPS0 = 1;
   277     079E  1283               	bcf	3,5	;RP0=0, select bank0
   278     079F  1303               	bcf	3,6	;RP1=0, select bank0
   279     07A0  1412               	bsf	18,0	;volatile
   280     07A1                     l686:
   281                           
   282                           ;main.c: 29:     T2CKPS1 = 0;
   283     07A1  1092               	bcf	18,1	;volatile
   284     07A2                     l688:
   285                           
   286                           ;main.c: 32:     TMR2ON = 1;
   287     07A2  1512               	bsf	18,2	;volatile
   288     07A3                     l690:
   289     07A3                     l692:
   290                           
   291                           ;main.c: 38:     {;main.c: 39:         DC = 0;
   292     07A3  01F6               	clrf	main@DC
   293     07A4  01F7               	clrf	main@DC+1
   294                           
   295                           ;main.c: 42:         while (DC < 500)
   296     07A5  2FBE               	goto	l700
   297     07A6                     l694:
   298                           
   299                           ;main.c: 43:         {;main.c: 44:             PWM1_Set_Duty(DC);
   300     07A6  0877               	movf	main@DC+1,w
   301     07A7  00F1               	movwf	PWM1_Set_Duty@DC+1
   302     07A8  0876               	movf	main@DC,w
   303     07A9  00F0               	movwf	PWM1_Set_Duty@DC
   304     07AA  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   305     07AF                     l696:
   306                           
   307                           ;main.c: 45:             DC++;
   308     07AF  3001               	movlw	1
   309     07B0  07F6               	addwf	main@DC,f
   310     07B1  1803               	skipnc
   311     07B2  0AF7               	incf	main@DC+1,f
   312     07B3  3000               	movlw	0
   313     07B4  07F7               	addwf	main@DC+1,f
   314     07B5                     l698:
   315                           
   316                           ;main.c: 46:             _delay((unsigned long)((2)*(4000000/4000.0)));
   317     07B5  3003               	movlw	3
   318     07B6  00F5               	movwf	??_main+1
   319     07B7  3097               	movlw	151
   320     07B8  00F4               	movwf	??_main
   321     07B9                     u117:
   322     07B9  0BF4               	decfsz	??_main,f
   323     07BA  2FB9               	goto	u117
   324     07BB  0BF5               	decfsz	??_main+1,f
   325     07BC  2FB9               	goto	u117
   326     07BD  2FBE               	nop2
   327     07BE                     l700:
   328                           
   329                           ;main.c: 42:         while (DC < 500)
   330     07BE  3001               	movlw	1
   331     07BF  0277               	subwf	main@DC+1,w
   332     07C0  30F4               	movlw	244
   333     07C1  1903               	skipnz
   334     07C2  0276               	subwf	main@DC,w
   335     07C3  1C03               	skipc
   336     07C4  2FC6               	goto	u91
   337     07C5  2FC7               	goto	u90
   338     07C6                     u91:
   339     07C6  2FA6               	goto	l694
   340     07C7                     u90:
   341     07C7                     l702:
   342                           
   343                           ;main.c: 48:         _delay((unsigned long)((100)*(4000000/4000.0)));
   344     07C7  3082               	movlw	130
   345     07C8  00F5               	movwf	??_main+1
   346     07C9  30DD               	movlw	221
   347     07CA  00F4               	movwf	??_main
   348     07CB                     u127:
   349     07CB  0BF4               	decfsz	??_main,f
   350     07CC  2FCB               	goto	u127
   351     07CD  0BF5               	decfsz	??_main+1,f
   352     07CE  2FCB               	goto	u127
   353     07CF  2FD0               	nop2
   354                           
   355                           ;main.c: 51:         while (DC > 0)
   356     07D0  2FE9               	goto	l710
   357     07D1                     l704:
   358                           
   359                           ;main.c: 52:         {;main.c: 53:             PWM1_Set_Duty(DC);
   360     07D1  0877               	movf	main@DC+1,w
   361     07D2  00F1               	movwf	PWM1_Set_Duty@DC+1
   362     07D3  0876               	movf	main@DC,w
   363     07D4  00F0               	movwf	PWM1_Set_Duty@DC
   364     07D5  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   365     07DA                     l706:
   366                           
   367                           ;main.c: 54:             DC--;
   368     07DA  3001               	movlw	1
   369     07DB  02F6               	subwf	main@DC,f
   370     07DC  3000               	movlw	0
   371     07DD  1C03               	skipc
   372     07DE  03F7               	decf	main@DC+1,f
   373     07DF  02F7               	subwf	main@DC+1,f
   374     07E0                     l708:
   375                           
   376                           ;main.c: 55:             _delay((unsigned long)((2)*(4000000/4000.0)));
   377     07E0  3003               	movlw	3
   378     07E1  00F5               	movwf	??_main+1
   379     07E2  3097               	movlw	151
   380     07E3  00F4               	movwf	??_main
   381     07E4                     u137:
   382     07E4  0BF4               	decfsz	??_main,f
   383     07E5  2FE4               	goto	u137
   384     07E6  0BF5               	decfsz	??_main+1,f
   385     07E7  2FE4               	goto	u137
   386     07E8  2FE9               	nop2
   387     07E9                     l710:
   388                           
   389                           ;main.c: 51:         while (DC > 0)
   390     07E9  0876               	movf	main@DC,w
   391     07EA  0477               	iorwf	main@DC+1,w
   392     07EB  1D03               	btfss	3,2
   393     07EC  2FEE               	goto	u101
   394     07ED  2FEF               	goto	u100
   395     07EE                     u101:
   396     07EE  2FD1               	goto	l704
   397     07EF                     u100:
   398     07EF                     l712:
   399                           
   400                           ;main.c: 57:         _delay((unsigned long)((100)*(4000000/4000.0)));
   401     07EF  3082               	movlw	130
   402     07F0  00F5               	movwf	??_main+1
   403     07F1  30DD               	movlw	221
   404     07F2  00F4               	movwf	??_main
   405     07F3                     u147:
   406     07F3  0BF4               	decfsz	??_main,f
   407     07F4  2FF3               	goto	u147
   408     07F5  0BF5               	decfsz	??_main+1,f
   409     07F6  2FF3               	goto	u147
   410     07F7  2FF8               	nop2
   411     07F8  2FA3               	goto	l692
   412     07F9  120A  118A  2800   	ljmp	start
   413     07FC                     __end_of_main:
   414                           
   415                           	psect	text1
   416     0774                     __ptext1:	
   417 ;; *************** function _PWM1_Set_Duty *****************
   418 ;; Defined at:
   419 ;;		line 63 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  DC              2    0[COMMON] unsigned int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         2       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          2       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     0774                     _PWM1_Set_Duty:	
   447                           ;psect for function _PWM1_Set_Duty
   448                           
   449     0774                     l674:	
   450                           ;incstack = 0
   451                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   452                           
   453                           
   454                           ;main.c: 63: void PWM1_Set_Duty(uint16_t DC);main.c: 64: {;main.c: 66:     if (DC < 1024
      +                          )
   455     0774  3004               	movlw	4
   456     0775  0271               	subwf	PWM1_Set_Duty@DC+1,w
   457     0776  3000               	movlw	0
   458     0777  1903               	skipnz
   459     0778  0270               	subwf	PWM1_Set_Duty@DC,w
   460     0779  1803               	skipnc
   461     077A  2F7C               	goto	u61
   462     077B  2F7D               	goto	u60
   463     077C                     u61:
   464     077C  2F94               	goto	l42
   465     077D                     u60:
   466     077D                     l676:
   467                           
   468                           ;main.c: 67:     {;main.c: 68:         CCP1Y = DC & 1;
   469     077D  1870               	btfsc	PWM1_Set_Duty@DC,0
   470     077E  2F80               	goto	u71
   471     077F  2F84               	goto	u70
   472     0780                     u71:
   473     0780  1283               	bcf	3,5	;RP0=0, select bank0
   474     0781  1303               	bcf	3,6	;RP1=0, select bank0
   475     0782  1617               	bsf	23,4	;volatile
   476     0783  2F87               	goto	u84
   477     0784                     u70:
   478     0784  1283               	bcf	3,5	;RP0=0, select bank0
   479     0785  1303               	bcf	3,6	;RP1=0, select bank0
   480     0786  1217               	bcf	23,4	;volatile
   481     0787                     u84:
   482                           
   483                           ;main.c: 69:         CCP1X = DC & 2;
   484     0787  1297               	bcf	23,5	;volatile
   485     0788                     l678:
   486                           
   487                           ;main.c: 70:         CCPR1L = DC >> 2;
   488     0788  0871               	movf	PWM1_Set_Duty@DC+1,w
   489     0789  00F3               	movwf	??_PWM1_Set_Duty+1
   490     078A  0870               	movf	PWM1_Set_Duty@DC,w
   491     078B  00F2               	movwf	??_PWM1_Set_Duty
   492     078C  1003               	clrc
   493     078D  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   494     078E  0CF2               	rrf	??_PWM1_Set_Duty,f
   495     078F  1003               	clrc
   496     0790  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   497     0791  0CF2               	rrf	??_PWM1_Set_Duty,f
   498     0792  0872               	movf	??_PWM1_Set_Duty,w
   499     0793  0095               	movwf	21	;volatile
   500     0794                     l42:
   501     0794  0008               	return
   502     0795                     __end_of_PWM1_Set_Duty:
   503     007E                     btemp	set	126	;btemp
   504     007E                     wtemp0	set	126
   505                           
   506                           	psect	idloc
   507                           
   508                           ;Config register IDLOC0 @ 0x2000
   509                           ;	unspecified, using default values
   510     2000                     	org	8192
   511     2000  3FFF               	dw	16383
   512                           
   513                           ;Config register IDLOC1 @ 0x2001
   514                           ;	unspecified, using default values
   515     2001                     	org	8193
   516     2001  3FFF               	dw	16383
   517                           
   518                           ;Config register IDLOC2 @ 0x2002
   519                           ;	unspecified, using default values
   520     2002                     	org	8194
   521     2002  3FFF               	dw	16383
   522                           
   523                           ;Config register IDLOC3 @ 0x2003
   524                           ;	unspecified, using default values
   525     2003                     	org	8195
   526     2003  3FFF               	dw	16383
   527                           
   528                           	psect	config
   529                           
   530                           ;Config register CONFIG @ 0x2007
   531                           ;	Oscillator Selection bits
   532                           ;	FOSC = XT, XT oscillator
   533                           ;	Watchdog Timer Enable bit
   534                           ;	WDTE = OFF, WDT disabled
   535                           ;	Power-up Timer Enable bit
   536                           ;	PWRTE = ON, PWRT enabled
   537                           ;	Brown-out Reset Enable bit
   538                           ;	BOREN = ON, BOR enabled
   539                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   540                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   541                           ;	Data EEPROM Memory Code Protection bit
   542                           ;	CPD = OFF, Data EEPROM code protection off
   543                           ;	Flash Program Memory Write Enable bits
   544                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   545                           ;	In-Circuit Debugger Mode bit
   546                           ;	DEBUG = 0x1, unprogrammed default
   547                           ;	Flash Program Memory Code Protection bit
   548                           ;	CP = OFF, Code protection off
   549     2007                     	org	8199
   550     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     310
                                              4 COMMON     4     4      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Mar 21 22:38:28 2023

                     l42 0794                       u60 077D                       u61 077C  
                     u70 0784                       u71 0780                       u90 07C7  
                     u91 07C6                       u84 0787                      l700 07BE  
                    l710 07E9                      l702 07C7                      l712 07EF  
                    l704 07D1                      l706 07DA                      l708 07E0  
                    l680 0795                      l674 0774                      l690 07A3  
                    l682 079C                      l676 077D                      l692 07A3  
                    l684 079E                      l678 0788                      l694 07A6  
                    l686 07A1                      l696 07AF                      l688 07A2  
                    l698 07B5                      u100 07EF                      u101 07EE  
                    u117 07B9                      u127 07CB                      u137 07E4  
                    u147 07F3                      _PR2 0092                     _main 0795  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCPR1L 0015                   _TMR2ON 0092                   _TRISC2 043A  
                 main@DC 0076  __end_of__initialization 07FC           __pcstackCOMMON 0070  
  __end_of_PWM1_Set_Duty 0795               __pmaintext 0795                  _T2CKPS0 0090  
                _T2CKPS1 0091                  __ptext1 0774     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002            _PWM1_Set_Duty 0774  
         ?_PWM1_Set_Duty 0070          ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  
