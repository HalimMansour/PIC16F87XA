

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Mar 23 07:17:22 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0019                     _TXREG	set	25
   169     0008                     _PORTD	set	8
   170     00C7                     _SPEN	set	199
   171     0032                     _RB2	set	50
   172     0031                     _RB1	set	49
   173     0030                     _RB0	set	48
   174     0099                     _SPBRG	set	153
   175     0088                     _TRISD	set	136
   176     0086                     _TRISB	set	134
   177     04C1                     _TRMT	set	1217
   178     04C5                     _TXEN	set	1221
   179     043F                     _TRISC7	set	1087
   180     043E                     _TRISC6	set	1086
   181     04C4                     _SYNC	set	1220
   182     04C2                     _BRGH	set	1218
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_UART_TX_Init:
   199     0070                     ??_UART_TX_Init:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_UART_Write:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_UART_Write:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     UART_Write@data:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216     0070                     	ds	1
   217     0071                     ??_main:
   218                           
   219                           ; 1 bytes @ 0x1
   220     0071                     	ds	3
   221     0074                     main@data:
   222                           
   223                           ; 1 bytes @ 0x4
   224     0074                     	ds	1
   225                           
   226                           	psect	maintext
   227     07A3                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 25 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  data            1    4[COMMON] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         1       0       0       0       0
   249 ;;      Temps:          3       0       0       0       0
   250 ;;      Totals:         4       0       0       0       0
   251 ;;Total ram usage:        4 bytes
   252 ;; Hardware stack levels required when called: 1
   253 ;; This function calls:
   254 ;;		_UART_TX_Init
   255 ;;		_UART_Write
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     07A3                     _main:	
   262                           ;psect for function _main
   263                           
   264     07A3                     l666:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   267                           
   268                           
   269                           ;main.c: 28:     UART_TX_Init();
   270     07A3  120A  118A  2794  120A  118A  	fcall	_UART_TX_Init
   271     07A8                     l668:
   272                           
   273                           ;main.c: 29:     uint8_t data = 0;
   274     07A8  01F4               	clrf	main@data
   275     07A9                     l670:
   276                           
   277                           ;main.c: 30:     TRISB = 0x07;
   278     07A9  3007               	movlw	7
   279     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   280     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   281     07AC  0086               	movwf	6	;volatile
   282     07AD                     l672:
   283                           
   284                           ;main.c: 31:     TRISD = 0x00;
   285     07AD  0188               	clrf	8	;volatile
   286     07AE                     l674:
   287                           
   288                           ;main.c: 32:     PORTD = 0x00;
   289     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   290     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   291     07B0  0188               	clrf	8	;volatile
   292     07B1                     l676:
   293                           
   294                           ;main.c: 35:     {;main.c: 36:         if (RB0)
   295     07B1  1C06               	btfss	6,0	;volatile
   296     07B2  2FB4               	goto	u21
   297     07B3  2FB5               	goto	u20
   298     07B4                     u21:
   299     07B4  2FC6               	goto	l682
   300     07B5                     u20:
   301     07B5                     l678:
   302                           
   303                           ;main.c: 37:         {;main.c: 38:             data++;
   304     07B5  3001               	movlw	1
   305     07B6  00FF               	movwf	btemp+1
   306     07B7  087F               	movf	btemp+1,w
   307     07B8  07F4               	addwf	main@data,f
   308     07B9                     l680:
   309                           
   310                           ;main.c: 39:             _delay((unsigned long)((250)*(4000000/4000.0)));
   311     07B9  3002               	movlw	2
   312     07BA  00F3               	movwf	??_main+2
   313     07BB  3045               	movlw	69
   314     07BC  00F2               	movwf	??_main+1
   315     07BD  30A9               	movlw	169
   316     07BE  00F1               	movwf	??_main
   317     07BF                     u57:
   318     07BF  0BF1               	decfsz	??_main,f
   319     07C0  2FBF               	goto	u57
   320     07C1  0BF2               	decfsz	??_main+1,f
   321     07C2  2FBF               	goto	u57
   322     07C3  0BF3               	decfsz	??_main+2,f
   323     07C4  2FBF               	goto	u57
   324     07C5  2FC6               	nop2
   325     07C6                     l682:
   326                           
   327                           ;main.c: 41:         if (RB1)
   328     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   329     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   330     07C8  1C86               	btfss	6,1	;volatile
   331     07C9  2FCB               	goto	u31
   332     07CA  2FCC               	goto	u30
   333     07CB                     u31:
   334     07CB  2FDB               	goto	l688
   335     07CC                     u30:
   336     07CC                     l684:
   337                           
   338                           ;main.c: 42:         {;main.c: 43:             data--;
   339     07CC  3001               	movlw	1
   340     07CD  02F4               	subwf	main@data,f
   341     07CE                     l686:
   342                           
   343                           ;main.c: 44:             _delay((unsigned long)((250)*(4000000/4000.0)));
   344     07CE  3002               	movlw	2
   345     07CF  00F3               	movwf	??_main+2
   346     07D0  3045               	movlw	69
   347     07D1  00F2               	movwf	??_main+1
   348     07D2  30A9               	movlw	169
   349     07D3  00F1               	movwf	??_main
   350     07D4                     u67:
   351     07D4  0BF1               	decfsz	??_main,f
   352     07D5  2FD4               	goto	u67
   353     07D6  0BF2               	decfsz	??_main+1,f
   354     07D7  2FD4               	goto	u67
   355     07D8  0BF3               	decfsz	??_main+2,f
   356     07D9  2FD4               	goto	u67
   357     07DA  2FDB               	nop2
   358     07DB                     l688:
   359                           
   360                           ;main.c: 46:         if (RB2)
   361     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   362     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   363     07DD  1D06               	btfss	6,2	;volatile
   364     07DE  2FE0               	goto	u41
   365     07DF  2FE1               	goto	u40
   366     07E0                     u41:
   367     07E0  2FF4               	goto	l694
   368     07E1                     u40:
   369     07E1                     l690:
   370                           
   371                           ;main.c: 47:         {;main.c: 48:             UART_Write(data);
   372     07E1  0874               	movf	main@data,w
   373     07E2  120A  118A  2788  120A  118A  	fcall	_UART_Write
   374     07E7                     l692:
   375                           
   376                           ;main.c: 49:             _delay((unsigned long)((250)*(4000000/4000.0)));
   377     07E7  3002               	movlw	2
   378     07E8  00F3               	movwf	??_main+2
   379     07E9  3045               	movlw	69
   380     07EA  00F2               	movwf	??_main+1
   381     07EB  30A9               	movlw	169
   382     07EC  00F1               	movwf	??_main
   383     07ED                     u77:
   384     07ED  0BF1               	decfsz	??_main,f
   385     07EE  2FED               	goto	u77
   386     07EF  0BF2               	decfsz	??_main+1,f
   387     07F0  2FED               	goto	u77
   388     07F1  0BF3               	decfsz	??_main+2,f
   389     07F2  2FED               	goto	u77
   390     07F3  2FF4               	nop2
   391     07F4                     l694:
   392                           
   393                           ;main.c: 51:         PORTD = data;
   394     07F4  0874               	movf	main@data,w
   395     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   396     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   397     07F7  0088               	movwf	8	;volatile
   398     07F8  2FB1               	goto	l676
   399     07F9  120A  118A  2800   	ljmp	start
   400     07FC                     __end_of_main:
   401                           
   402                           	psect	text1
   403     0788                     __ptext1:	
   404 ;; *************** function _UART_Write *****************
   405 ;; Defined at:
   406 ;;		line 74 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  data            1    wreg     unsigned char 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  data            1    0[COMMON] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         1       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         1       0       0       0       0
   424 ;;Total ram usage:        1 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433     0788                     _UART_Write:	
   434                           ;psect for function _UART_Write
   435                           
   436                           
   437                           ;incstack = 0
   438                           ; Regs used in _UART_Write: [wreg]
   439                           ;UART_Write@data stored from wreg
   440     0788  00F0               	movwf	UART_Write@data
   441     0789                     l662:
   442     0789                     l53:	
   443                           ;main.c: 77:         ;
   444                           
   445                           
   446                           ;main.c: 76:     while (!TRMT)
   447     0789  1683               	bsf	3,5	;RP0=1, select bank1
   448     078A  1303               	bcf	3,6	;RP1=0, select bank1
   449     078B  1C98               	btfss	24,1	;volatile
   450     078C  2F8E               	goto	u11
   451     078D  2F8F               	goto	u10
   452     078E                     u11:
   453     078E  2F89               	goto	l53
   454     078F                     u10:
   455     078F                     l664:
   456                           
   457                           ;main.c: 78:     TXREG = data;
   458     078F  0870               	movf	UART_Write@data,w
   459     0790  1283               	bcf	3,5	;RP0=0, select bank0
   460     0791  1303               	bcf	3,6	;RP1=0, select bank0
   461     0792  0099               	movwf	25	;volatile
   462     0793                     l56:
   463     0793  0008               	return
   464     0794                     __end_of_UART_Write:
   465                           
   466                           	psect	text2
   467     0794                     __ptext2:	
   468 ;; *************** function _UART_TX_Init *****************
   469 ;; Defined at:
   470 ;;		line 58 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497     0794                     _UART_TX_Init:	
   498                           ;psect for function _UART_TX_Init
   499                           
   500     0794                     l648:	
   501                           ;incstack = 0
   502                           ; Regs used in _UART_TX_Init: [wreg]
   503                           
   504                           
   505                           ;main.c: 61:     BRGH = 1;
   506     0794  1683               	bsf	3,5	;RP0=1, select bank1
   507     0795  1303               	bcf	3,6	;RP1=0, select bank1
   508     0796  1518               	bsf	24,2	;volatile
   509     0797                     l650:
   510                           
   511                           ;main.c: 62:     SPBRG = 25;
   512     0797  3019               	movlw	25
   513     0798  0099               	movwf	25	;volatile
   514     0799                     l652:
   515                           
   516                           ;main.c: 65:     SYNC = 0;
   517     0799  1218               	bcf	24,4	;volatile
   518     079A                     l654:
   519                           
   520                           ;main.c: 66:     SPEN = 1;
   521     079A  1283               	bcf	3,5	;RP0=0, select bank0
   522     079B  1303               	bcf	3,6	;RP1=0, select bank0
   523     079C  1798               	bsf	24,7	;volatile
   524     079D                     l656:
   525                           
   526                           ;main.c: 69:     TRISC6 = 0;
   527     079D  1683               	bsf	3,5	;RP0=1, select bank1
   528     079E  1303               	bcf	3,6	;RP1=0, select bank1
   529     079F  1307               	bcf	7,6	;volatile
   530     07A0                     l658:
   531                           
   532                           ;main.c: 70:     TRISC7 = 0;
   533     07A0  1387               	bcf	7,7	;volatile
   534     07A1                     l660:
   535                           
   536                           ;main.c: 71:     TXEN = 1;
   537     07A1  1698               	bsf	24,5	;volatile
   538     07A2                     l50:
   539     07A2  0008               	return
   540     07A3                     __end_of_UART_TX_Init:
   541     007E                     btemp	set	126	;btemp
   542     007E                     wtemp0	set	126
   543                           
   544                           	psect	idloc
   545                           
   546                           ;Config register IDLOC0 @ 0x2000
   547                           ;	unspecified, using default values
   548     2000                     	org	8192
   549     2000  3FFF               	dw	16383
   550                           
   551                           ;Config register IDLOC1 @ 0x2001
   552                           ;	unspecified, using default values
   553     2001                     	org	8193
   554     2001  3FFF               	dw	16383
   555                           
   556                           ;Config register IDLOC2 @ 0x2002
   557                           ;	unspecified, using default values
   558     2002                     	org	8194
   559     2002  3FFF               	dw	16383
   560                           
   561                           ;Config register IDLOC3 @ 0x2003
   562                           ;	unspecified, using default values
   563     2003                     	org	8195
   564     2003  3FFF               	dw	16383
   565                           
   566                           	psect	config
   567                           
   568                           ;Config register CONFIG @ 0x2007
   569                           ;	Oscillator Selection bits
   570                           ;	FOSC = XT, XT oscillator
   571                           ;	Watchdog Timer Enable bit
   572                           ;	WDTE = OFF, WDT disabled
   573                           ;	Power-up Timer Enable bit
   574                           ;	PWRTE = ON, PWRT enabled
   575                           ;	Brown-out Reset Enable bit
   576                           ;	BOREN = ON, BOR enabled
   577                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   578                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   579                           ;	Data EEPROM Memory Code Protection bit
   580                           ;	CPD = OFF, Data EEPROM code protection off
   581                           ;	Flash Program Memory Write Enable bits
   582                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   583                           ;	In-Circuit Debugger Mode bit
   584                           ;	DEBUG = 0x1, unprogrammed default
   585                           ;	Flash Program Memory Code Protection bit
   586                           ;	CP = OFF, Code protection off
   587     2007                     	org	8199
   588     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                       _UART_TX_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Mar 23 07:17:22 2023

                     l50 07A2                       l53 0789                       l56 0793  
                     u10 078F                       u11 078E                       u20 07B5  
                     u21 07B4                       u30 07CC                       u31 07CB  
                     u40 07E1                       u41 07E0                       u57 07BF  
                     u67 07D4                       u77 07ED                      l650 0797  
                    l660 07A1                      l652 0799                      l654 079A  
                    l662 0789                      l670 07A9                      l656 079D  
                    l648 0794                      l664 078F                      l680 07B9  
                    l672 07AD                      l658 07A0                      l690 07E1  
                    l682 07C6                      l674 07AE                      l666 07A3  
                    l692 07E7                      l684 07CC                      l676 07B1  
                    l668 07A8                      l694 07F4                      l686 07CE  
                    l678 07B5                      l688 07DB                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 07A3                     btemp 007E  
                   start 0000                    ?_main 0070                    _SPBRG 0099  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019              ?_UART_Write 0070                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _TRISC6 043E                   _TRISC7 043F  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07A3  
           ??_UART_Write 0070            ?_UART_TX_Init 0070       __end_of_UART_Write 0794  
                __ptext1 0788                  __ptext2 0794           ??_UART_TX_Init 0070  
   end_of_initialization 07FC           UART_Write@data 0070      start_initialization 07FC  
   __end_of_UART_TX_Init 07A3                ___latbits 0002             _UART_TX_Init 0794  
               main@data 0074               _UART_Write 0788  
