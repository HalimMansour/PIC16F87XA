

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Mar 18 11:33:20 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Version 2.40
    12                           ; Generated 17/11/2021 GMT
    13                           ; 
    14                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0006                     _PORTB	set	6
   167     0086                     _TRISB	set	134
   168                           
   169                           	psect	cinit
   170     07FC                     start_initialization:	
   171                           ; #config settings
   172                           
   173     07FC                     __initialization:
   174     07FC                     end_of_initialization:	
   175                           ;End of C runtime variable initialization code
   176                           
   177     07FC                     __end_of__initialization:
   178     07FC  0183               	clrf	3
   179     07FD  120A  118A  2F7C   	ljmp	_main	;jump to C main() function
   180                           
   181                           	psect	cstackCOMMON
   182     0070                     __pcstackCOMMON:
   183     0070                     ?_main:
   184     0070                     ??_main:	
   185                           ; 1 bytes @ 0x0
   186                           
   187                           
   188                           ; 1 bytes @ 0x0
   189     0070                     	ds	3
   190     0073                     main@s_38:
   191                           
   192                           ; 2 bytes @ 0x3
   193     0073                     	ds	2
   194     0075                     main@s:
   195                           
   196                           ; 1 bytes @ 0x5
   197     0075                     	ds	1
   198     0076                     main@j:
   199                           
   200                           ; 2 bytes @ 0x6
   201     0076                     	ds	2
   202     0078                     main@j_37:
   203                           
   204                           ; 2 bytes @ 0x8
   205     0078                     	ds	2
   206                           
   207                           	psect	maintext
   208     077C                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 14 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  j               2    8[COMMON] int 
   219 ;;  s               2    3[COMMON] int 
   220 ;;  j               2    6[COMMON] int 
   221 ;;  s               1    5[COMMON] unsigned char 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, btemp+1
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         7       0       0       0       0
   233 ;;      Temps:          3       0       0       0       0
   234 ;;      Totals:        10       0       0       0       0
   235 ;;Total ram usage:       10 bytes
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243     077C                     _main:	
   244                           ;psect for function _main
   245                           
   246     077C                     l612:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   249                           
   250                           
   251                           ;main.c: 18:     TRISB = 0x00;
   252     077C  1683               	bsf	3,5	;RP0=1, select bank1
   253     077D  1303               	bcf	3,6	;RP1=0, select bank1
   254     077E  0186               	clrf	6	;volatile
   255                           
   256                           ;main.c: 20:     PORTB = 0x00;
   257     077F  1283               	bcf	3,5	;RP0=0, select bank0
   258     0780  1303               	bcf	3,6	;RP1=0, select bank0
   259     0781  0186               	clrf	6	;volatile
   260     0782                     l11:	
   261                           ;main.c: 23:     unsigned char s;;main.c: 25:     while(1)
   262                           
   263                           
   264                           ;main.c: 26:     {;main.c: 27:         s=0;
   265     0782  01F5               	clrf	main@s
   266                           
   267                           ;main.c: 30:         for(int j = 0 ;j<48 ; j++)
   268     0783  01F6               	clrf	main@j
   269     0784  01F7               	clrf	main@j+1
   270     0785                     l618:
   271                           
   272                           ;main.c: 31:         {;main.c: 32:             PORTB = (1<<s);
   273     0785  3001               	movlw	1
   274     0786  00F0               	movwf	??_main
   275     0787  0A75               	incf	main@s,w
   276     0788  2F8B               	goto	u14
   277     0789                     u15:
   278     0789  1003               	clrc
   279     078A  0DF0               	rlf	??_main,f
   280     078B                     u14:
   281     078B  3EFF               	addlw	-1
   282     078C  1D03               	skipz
   283     078D  2F89               	goto	u15
   284     078E  0870               	movf	??_main,w
   285     078F  1283               	bcf	3,5	;RP0=0, select bank0
   286     0790  1303               	bcf	3,6	;RP1=0, select bank0
   287     0791  0086               	movwf	6	;volatile
   288     0792                     l620:
   289                           
   290                           ;main.c: 33:             s++;
   291     0792  3001               	movlw	1
   292     0793  00FF               	movwf	btemp+1
   293     0794  087F               	movf	btemp+1,w
   294     0795  07F5               	addwf	main@s,f
   295     0796                     l622:
   296                           
   297                           ;main.c: 34:             _delay((unsigned long)((100)*(4000000/4000.0)));
   298     0796  3082               	movlw	130
   299     0797  00F1               	movwf	??_main+1
   300     0798  30DD               	movlw	221
   301     0799  00F0               	movwf	??_main
   302     079A                     u57:
   303     079A  0BF0               	decfsz	??_main,f
   304     079B  2F9A               	goto	u57
   305     079C  0BF1               	decfsz	??_main+1,f
   306     079D  2F9A               	goto	u57
   307     079E  2F9F               	nop2
   308     079F                     l624:
   309     079F                     l626:
   310                           
   311                           ;main.c: 37:                 s=0;
   312     079F  01F5               	clrf	main@s
   313     07A0                     l628:
   314                           
   315                           ;main.c: 39:         }
   316     07A0  3001               	movlw	1
   317     07A1  07F6               	addwf	main@j,f
   318     07A2  1803               	skipnc
   319     07A3  0AF7               	incf	main@j+1,f
   320     07A4  3000               	movlw	0
   321     07A5  07F7               	addwf	main@j+1,f
   322     07A6                     l630:
   323     07A6  0877               	movf	main@j+1,w
   324     07A7  3A80               	xorlw	128
   325     07A8  00FF               	movwf	btemp+1
   326     07A9  3080               	movlw	128
   327     07AA  027F               	subwf	btemp+1,w
   328     07AB  1D03               	skipz
   329     07AC  2FAF               	goto	u25
   330     07AD  3030               	movlw	48
   331     07AE  0276               	subwf	main@j,w
   332     07AF                     u25:
   333     07AF  1C03               	skipc
   334     07B0  2FB2               	goto	u21
   335     07B1  2FB3               	goto	u20
   336     07B2                     u21:
   337     07B2  2F85               	goto	l618
   338     07B3                     u20:
   339     07B3                     l632:
   340                           
   341                           ;main.c: 42:         _delay((unsigned long)((500)*(4000000/4000.0)));
   342     07B3  3003               	movlw	3
   343     07B4  00F2               	movwf	??_main+2
   344     07B5  308A               	movlw	138
   345     07B6  00F1               	movwf	??_main+1
   346     07B7  3055               	movlw	85
   347     07B8  00F0               	movwf	??_main
   348     07B9                     u67:
   349     07B9  0BF0               	decfsz	??_main,f
   350     07BA  2FB9               	goto	u67
   351     07BB  0BF1               	decfsz	??_main+1,f
   352     07BC  2FB9               	goto	u67
   353     07BD  0BF2               	decfsz	??_main+2,f
   354     07BE  2FB9               	goto	u67
   355     07BF  2FC0               	nop2
   356     07C0                     l634:
   357                           
   358                           ;main.c: 46:         for(int j = 0 , s = 0 ;j<48 ; j++)
   359     07C0  01F8               	clrf	main@j_37
   360     07C1  01F9               	clrf	main@j_37+1
   361     07C2                     l636:
   362     07C2  01F3               	clrf	main@s_38
   363     07C3  01F4               	clrf	main@s_38+1
   364     07C4                     l642:
   365                           
   366                           ;main.c: 47:         {;main.c: 48:             PORTB = (8>>s);
   367     07C4  0A73               	incf	main@s_38,w
   368     07C5  00FF               	movwf	btemp+1
   369     07C6  3008               	movlw	8
   370     07C7  00F0               	movwf	??_main
   371     07C8  3000               	movlw	0
   372     07C9  00F1               	movwf	??_main+1
   373     07CA  2FCE               	goto	u34
   374     07CB                     u35:
   375     07CB  0D71               	rlf	??_main+1,w
   376     07CC  0CF1               	rrf	??_main+1,f
   377     07CD  0CF0               	rrf	??_main,f
   378     07CE                     u34:
   379     07CE  0BFF               	decfsz	btemp+1,f
   380     07CF  2FCB               	goto	u35
   381     07D0  0870               	movf	??_main,w
   382     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   383     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   384     07D3  0086               	movwf	6	;volatile
   385     07D4                     l644:
   386                           
   387                           ;main.c: 49:             s++;
   388     07D4  3001               	movlw	1
   389     07D5  07F3               	addwf	main@s_38,f
   390     07D6  1803               	skipnc
   391     07D7  0AF4               	incf	main@s_38+1,f
   392     07D8  3000               	movlw	0
   393     07D9  07F4               	addwf	main@s_38+1,f
   394     07DA                     l646:
   395                           
   396                           ;main.c: 50:             _delay((unsigned long)((100)*(4000000/4000.0)));
   397     07DA  3082               	movlw	130
   398     07DB  00F1               	movwf	??_main+1
   399     07DC  30DD               	movlw	221
   400     07DD  00F0               	movwf	??_main
   401     07DE                     u77:
   402     07DE  0BF0               	decfsz	??_main,f
   403     07DF  2FDE               	goto	u77
   404     07E0  0BF1               	decfsz	??_main+1,f
   405     07E1  2FDE               	goto	u77
   406     07E2  2FE3               	nop2
   407     07E3                     l648:
   408     07E3                     l650:
   409                           
   410                           ;main.c: 53:                 s=0;
   411     07E3  01F3               	clrf	main@s_38
   412     07E4  01F4               	clrf	main@s_38+1
   413     07E5                     l652:
   414                           
   415                           ;main.c: 55:         }
   416     07E5  3001               	movlw	1
   417     07E6  07F8               	addwf	main@j_37,f
   418     07E7  1803               	skipnc
   419     07E8  0AF9               	incf	main@j_37+1,f
   420     07E9  3000               	movlw	0
   421     07EA  07F9               	addwf	main@j_37+1,f
   422     07EB                     l654:
   423     07EB  0879               	movf	main@j_37+1,w
   424     07EC  3A80               	xorlw	128
   425     07ED  00FF               	movwf	btemp+1
   426     07EE  3080               	movlw	128
   427     07EF  027F               	subwf	btemp+1,w
   428     07F0  1D03               	skipz
   429     07F1  2FF4               	goto	u45
   430     07F2  3030               	movlw	48
   431     07F3  0278               	subwf	main@j_37,w
   432     07F4                     u45:
   433     07F4  1C03               	skipc
   434     07F5  2FF7               	goto	u41
   435     07F6  2FF8               	goto	u40
   436     07F7                     u41:
   437     07F7  2FC4               	goto	l642
   438     07F8                     u40:
   439     07F8  2F82               	goto	l11
   440     07F9  120A  118A  2800   	ljmp	start
   441     07FC                     __end_of_main:
   442     007E                     btemp	set	126	;btemp
   443     007E                     wtemp0	set	126
   444                           
   445                           	psect	idloc
   446                           
   447                           ;Config register IDLOC0 @ 0x2000
   448                           ;	unspecified, using default values
   449     2000                     	org	8192
   450     2000  3FFF               	dw	16383
   451                           
   452                           ;Config register IDLOC1 @ 0x2001
   453                           ;	unspecified, using default values
   454     2001                     	org	8193
   455     2001  3FFF               	dw	16383
   456                           
   457                           ;Config register IDLOC2 @ 0x2002
   458                           ;	unspecified, using default values
   459     2002                     	org	8194
   460     2002  3FFF               	dw	16383
   461                           
   462                           ;Config register IDLOC3 @ 0x2003
   463                           ;	unspecified, using default values
   464     2003                     	org	8195
   465     2003  3FFF               	dw	16383
   466                           
   467                           	psect	config
   468                           
   469                           ;Config register CONFIG @ 0x2007
   470                           ;	Oscillator Selection bits
   471                           ;	FOSC = XT, XT oscillator
   472                           ;	Watchdog Timer Enable bit
   473                           ;	WDTE = OFF, WDT disabled
   474                           ;	Power-up Timer Enable bit
   475                           ;	PWRTE = ON, PWRT enabled
   476                           ;	Brown-out Reset Enable bit
   477                           ;	BOREN = ON, BOR enabled
   478                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   479                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   480                           ;	Data EEPROM Memory Code Protection bit
   481                           ;	CPD = OFF, Data EEPROM code protection off
   482                           ;	Flash Program Memory Write Enable bits
   483                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   484                           ;	In-Circuit Debugger Mode bit
   485                           ;	DEBUG = 0x1, unprogrammed default
   486                           ;	Flash Program Memory Code Protection bit
   487                           ;	CP = OFF, Code protection off
   488     2007                     	org	8199
   489     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0      90
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Mar 18 11:33:20 2023

                     l11 0782                       u20 07B3                       u21 07B2  
                     u14 078B                       u15 0789                       u40 07F8  
                     u41 07F7                       u25 07AF                       u34 07CE  
                     u35 07CB                       u45 07F4                       u57 079A  
                     u67 07B9                       u77 07DE                      l620 0792  
                    l612 077C                      l630 07A6                      l622 0796  
                    l632 07B3                      l624 079F                      l650 07E3  
                    l642 07C4                      l634 07C0                      l626 079F  
                    l618 0785                      l652 07E5                      l644 07D4  
                    l636 07C2                      l628 07A0                      l654 07EB  
                    l646 07DA                      l648 07E3                     _main 077C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    main@j 0076  
                  main@s 0075                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 077C  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               main@j_37 0078                 main@s_38 0073  
